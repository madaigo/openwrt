# This is a basic workflow to help you get started with Actions

name: build immortalwrt

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      - name: init env
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          echo $(nproc)
          free -h
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache clang clangd cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
            g++-multilib git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev \
            libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev \
            libssl-dev libtool lld lldb lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 \
            python3 python3-pip python3-ply python-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig \
            texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
      - name: source code
        run: |
          pwd
          git clone --depth=1 https://github.com/hanwckf/immortalwrt-mt798x.git openwrt
          ls -l
      - name: compile
        run: |
          pwd
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          make menuconfig
          make -j$(nproc)
      - name: pack
        run: |
          cd openwrt
          tar -zcvf bin_dir.tar.gz ./bin/
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: myartifact
          path: bin_dir.tar.gz
